[tool.poetry]
name = "ngxmgr"
version = "0.1.0"
description = "CLI tool for managing NGINX deployments across multiple Linux servers"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "ngxmgr", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
typer = {extras = ["all"], version = "^0.16.0"}
paramiko = "^3.3.1"
boto3 = "^1.34.0"
pydantic = "^2.5.0"
rich = "^13.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
ruff = "^0.1.7"
mypy = "^1.7.1"
types-paramiko = "^3.3.0"

[tool.poetry.scripts]
ngxmgr = "ngxmgr.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/ngxmgr",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
] 